@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor
@inject AuthenticationStateProvider AuthStateProvider
@rendermode InteractiveServer

<div class="flex flex-col h-full">
    <div class="p-4 border-b border-gray-700">
        <a href="/"
           class="flex justify-center space-x-2">
            <span class="text-xl font-medium tracking-tight text-blue-400">Blazor App</span>
        </a>
    </div>

    <div class="py-4 px-3 overflow-y-auto flex-grow">
        <nav>
            <ul class="space-y-2">
                <li>
                    <NavLink class="flex items-center p-2 text-base font-normal text-gray-300 rounded-lg hover:bg-gray-700 group"
                             href=""
                             Match="NavLinkMatch.All">
                        <svg class="w-6 h-6 text-gray-400 group-hover:text-blue-400"
                             fill="currentColor"
                             viewBox="0 0 20 20"
                             xmlns="http://www.w3.org/2000/svg">
                            <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
                        </svg>
                        <span class="ml-3">Home</span>
                    </NavLink>
                </li>
                <li>
                    <NavLink class="flex items-center p-2 text-base font-normal text-gray-300 rounded-lg hover:bg-gray-700 group"
                             href="counter">
                        <svg class="w-6 h-6 text-gray-400 group-hover:text-blue-400"
                             fill="currentColor"
                             viewBox="0 0 20 20"
                             xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd"
                                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z"
                                  clip-rule="evenodd">
                            </path>
                        </svg>
                        <span class="ml-3">Counter</span>
                    </NavLink>
                </li>
                <li>
                    <NavLink class="flex items-center p-2 text-base font-normal text-gray-300 rounded-lg hover:bg-gray-700 group"
                             href="weather">
                        <svg class="w-6 h-6 text-gray-400 group-hover:text-blue-400"
                             fill="currentColor"
                             viewBox="0 0 20 20"
                             xmlns="http://www.w3.org/2000/svg">
                            <path d="M5.5 16a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 16h-8z"></path>
                        </svg>
                        <span class="ml-3">Weather</span>
                    </NavLink>
                </li>
            </ul>
        </nav>
    </div>

    <div class="mt-auto p-4">
        @if (_isAuthenticated)
        {
            <div class="flex flex-col items-center space-y-2">
                <span class="text-gray-300 text-sm">@_userName</span>
                <button @onclick="SignOut"
                        class="w-full flex items-center justify-center space-x-2 text-gray-400 hover:text-gray-200 p-2 rounded-lg hover:bg-gray-700">
                    <svg class="w-5 h-5"
                         fill="none"
                         stroke="currentColor"
                         viewBox="0 0 24 24"
                         xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
                    </svg>
                    <span>Sign Out</span>
                </button>
            </div>
        }
        else
        {
            <button @onclick="SignIn"
                    class="w-full flex items-center justify-center space-x-2 text-gray-400 hover:text-gray-200 p-2 rounded-lg hover:bg-gray-700">
                <svg class="w-5 h-5"
                     fill="none"
                     stroke="currentColor"
                     viewBox="0 0 24 24"
                     xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"/>
                </svg>
                <span>Sign In with Google</span>
            </button>
        }
    </div>
</div>

@code {
    private bool _isAuthenticated;
    private string? _userName;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is null)
        {
            return;
        }

        _isAuthenticated = user.Identity.IsAuthenticated;

        if (_isAuthenticated)
        {
            _userName = user.Identity.Name;
        }
    }

    private void SignIn()
    {
        NavigationManager.NavigateTo(uri: "/signin", forceLoad: true);
    }

    private void SignOut()
    {
        NavigationManager.NavigateTo(uri: "/signout", forceLoad: true);
    }

}